# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BXD4VTXgQE8K7NvB1It_j6DewXjG5oqy
"""

import math
from CoolProp.CoolProp import PropsSI
import matplotlib.pyplot as plt

R_air = 287.05
gamma_air = 1.4

def otto_cycle(r, T1):
    """Simulate ideal Otto cycle given compression ratio and initial temperature (K)."""
    T2 = T1 * r**(gamma_air - 1)
    T3 = 2800
    T4 = T3 * (1 / r)**(gamma_air - 1)

    efficiency = 1 - 1 / (r**(gamma_air - 1))
    print("\n--- Otto Cycle ---")
    print(f"Compression ratio: {r}")
    print(f"Efficiency: {efficiency * 100:.2f}%")
    print(f"T1: {T1:.2f} K, T2: {T2:.2f} K, T3: {T3:.2f} K, T4: {T4:.2f} K")


    s1 = 0
    s2 = s1

    s3 = 1
    s4 = s3

    T_values = [T1, T2, T3, T4, T1]
    s_values = [s1, s2, s3, s4, s1]

    def plot_cycle(T, s, title):
        plt.figure()
        plt.plot(s, T, marker='o')
        plt.xlabel('Entropy (J/kgÂ·K)')
        plt.ylabel('Temperature (K)')
        plt.title(title)
        plt.grid(True)
        plt.show()


    plot_cycle(T_values, s_values, 'Ideal Otto Cycle T-s Diagram')

otto_cycle(r=8, T1=300)

!pip install CoolProp